{
  "openapi": "3.0.1",
  "info": {
    "title": "API Documentation",
    "description": "API Documentation for Redem 3.0",
    "version": "1.0.0",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "InterviewQuestion": {
        "description": "Structure for interview-based questions",
        "type": "object",
        "required": [
          "questionTitle",
          "answer"
        ],
        "properties": {
          "questionTitle": {
            "type": "string",
            "description": "Title or text of the interview question",
            "example": "What is your opinion about the product?"
          },
          "answer": {
            "type": "string",
            "description": "Response provided for the interview question",
            "example": "The product quality is excellent"
          }
        }
      },
      "DataPoint": {
        "description": "Individual data point containing question response and quality check settings",
        "type": "object",
        "required": [
          "questionId",
          "qualityCheck"
        ],
        "properties": {
          "questionId": {
            "type": "string",
            "description": "Unique identifier for the question",
            "example": "Q1"
          },
          "qualityCheck": {
            "type": "string",
            "enum": [
              "OES",
              "TS",
              "GQS",
              "PS",
              "CHS"
            ],
            "description": "Type of quality check to perform",
            "example": "OES"
          },
          "openEndedAnswer": {
            "type": "string",
            "description": "Response text for open-ended questions",
            "example": "The service was excellent"
          },
          "title": {
            "type": "string",
            "description": "Title or text of the question",
            "example": "How would you rate our service?"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Keywords for analyzing open-ended responses",
            "example": [
              "excellent",
              "service",
              "quality"
            ]
          },
          "isDuplicateEnabled": {
            "type": "boolean",
            "description": "Whether to check for duplicate responses",
            "example": true
          },
          "duration": {
            "type": "number",
            "description": "Time spent on question in seconds",
            "example": 45
          },
          "gridQuestions": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Array of responses for grid questions",
            "example": [
              5,
              4,
              3,
              5,
              4
            ]
          },
          "answer": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "description": "Response value for plain score questions",
            "example": 5
          },
          "interview": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InterviewQuestion"
            },
            "description": "Array of interview questions and responses",
            "example": [
              {
                "questionTitle": "What did you like most?",
                "answer": "The customer service"
              }
            ]
          }
        }
      },
      "AddRespondentRequest": {
        "description": "Request body for adding a new respondent",
        "required": [
          "respondentId",
          "surveyName",
          "datapoints"
        ],
        "type": "object",
        "properties": {
          "respondentId": {
            "type": "string",
            "description": "Unique identifier for the respondent",
            "example": "RESP-001"
          },
          "projectName": {
            "type": "string",
            "description": "Optional project name for grouping",
            "example": "customer-satisfaction-2024"
          },
          "surveyName": {
            "type": "string",
            "description": "Name of the survey",
            "example": "customer-survey-2024"
          },
          "datapoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataPoint"
            },
            "description": "Array of question responses"
          },
          "needRealtimeResponse": {
            "type": "boolean",
            "description": "Whether to process synchronously",
            "example": true
          },
          "needDetailedResponse": {
            "type": "boolean",
            "description": "Whether to include detailed scoring",
            "example": true
          },
          "cleaningSettings": {
            "$ref": "#/components/schemas/CleaningSettings"
          },
          "reviewSettings": {
            "$ref": "#/components/schemas/CleaningSettings"
          },
          "missingValues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Values to be treated as missing",
            "example": [
              "NA",
              "N/A",
              "-"
            ]
          }
        }
      },
      "DatapointResponse": {
        "description": "Quality check results for a single datapoint",
        "type": "object",
        "properties": {
          "questionId": {
            "type": "string",
            "description": "ID of the checked question",
            "example": "Q1"
          },
          "qualityCheck": {
            "type": "string",
            "enum": [
              "OES",
              "TS",
              "GQS",
              "PS",
              "CHS"
            ],
            "description": "Type of quality check performed",
            "example": "OES"
          },
          "score": {
            "type": "number",
            "description": "Quality score (0-100)",
            "example": 85
          },
          "category": {
            "type": "string",
            "description": "Quality category",
            "example": "GOOD"
          },
          "reason": {
            "type": "string",
            "description": "Explanation for the score",
            "example": "Valid and detailed response"
          }
        }
      },
      "QualityCheckResponse": {
        "description": "Aggregated results for a quality check type",
        "type": "object",
        "properties": {
          "qualityCheck": {
            "type": "string",
            "enum": [
              "OES",
              "TS",
              "GQS",
              "PS",
              "CHS"
            ],
            "description": "Type of quality check",
            "example": "OES"
          },
          "score": {
            "type": "number",
            "description": "Aggregated score (0-100)",
            "example": 78
          }
        }
      },
      "DetailedResponse": {
        "description": "Detailed quality check results",
        "type": "object",
        "properties": {
          "datapointLevelResponse": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatapointResponse"
            },
            "description": "Individual datapoint scores"
          },
          "qualityCheckLevelResponse": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualityCheckResponse"
            },
            "description": "Aggregated quality check scores"
          }
        }
      },
      "RespondentResults": {
        "description": "Complete results for a respondent",
        "type": "object",
        "properties": {
          "isRespondentExcluded": {
            "type": "boolean",
            "description": "Exclusion status based on quality",
            "example": false
          },
          "redemScore": {
            "type": "number",
            "description": "Overall quality score (0-100)",
            "example": 85
          },
          "detailedResponse": {
            "$ref": "#/components/schemas/DetailedResponse",
            "description": "Detailed scoring information"
          }
        }
      },
      "AddSurveyRequest": {
        "description": "Request body for creating or customizing a survey",
        "required": [
          "surveyName",
          "cleaningSettings",
          "reviewSettings"
        ],
        "type": "object",
        "properties": {
          "projectName": {
            "type": "string",
            "description": "Optional project name for grouping surveys",
            "example": "customer-satisfaction-2024"
          },
          "surveyName": {
            "type": "string",
            "description": "Unique identifier for the survey",
            "example": "customer-survey-2024"
          },
          "cleaningSettings": {
            "$ref": "#/components/schemas/CleaningSettings",
            "example": {
              "ReDemSettings": true,
              "CustomSettings": {
                "redemScore": 80,
                "qualityChecks": [
                  {
                    "type": "OES",
                    "score": 70,
                    "minimumAnswers": 5
                  }
                ]
              }
            }
          },
          "reviewSettings": {
            "$ref": "#/components/schemas/CleaningSettings",
            "example": {
              "ReDemSettings": false,
              "OESCategories": {
                "validAnswers": true,
                "genericAnswers": true,
                "noInformation": true
              }
            }
          }
        }
      },
      "CleaningSettings": {
        "description": "Configuration for data cleaning and review process",
        "type": "object",
        "properties": {
          "ReDemSettings": {
            "type": "boolean",
            "description": "Whether to use default ReDem settings",
            "example": true
          },
          "CustomSettings": {
            "type": "object",
            "description": "Custom configuration for quality checks",
            "example": {
              "redemScore": 80,
              "qualityChecks": [
                {
                  "type": "OES",
                  "score": 70,
                  "minimumAnswers": 5
                }
              ]
            },
            "properties": {
              "redemScore": {
                "type": "number",
                "description": "Minimum acceptable ReDem score (0-100)",
                "example": 80
              },
              "qualityChecks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "OES",
                        "TS",
                        "GQS",
                        "PS",
                        "CHS"
                      ],
                      "example": "OES"
                    },
                    "score": {
                      "type": "number",
                      "example": 70
                    },
                    "minimumAnswers": {
                      "type": "number",
                      "example": 5
                    },
                    "minimumQuestions": {
                      "type": "number",
                      "example": 3
                    },
                    "minimumItems": {
                      "type": "number",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "OESCategories": {
            "type": "object",
            "description": "Configuration for Open-Ended response categories",
            "example": {
              "validAnswers": true,
              "genericAnswers": true,
              "noInformation": true
            },
            "properties": {
              "validAnswers": {
                "type": "boolean",
                "example": true
              },
              "genericAnswers": {
                "type": "boolean",
                "example": true
              },
              "noInformation": {
                "type": "boolean",
                "example": true
              },
              "badLanguage": {
                "type": "boolean",
                "example": true
              },
              "nonsense": {
                "type": "boolean",
                "example": true
              },
              "duplicateAnswer": {
                "type": "boolean",
                "example": true
              },
              "duplicateRespondent": {
                "type": "boolean",
                "example": true
              },
              "wrongTopic": {
                "type": "boolean",
                "example": true
              },
              "wrongLanguage": {
                "type": "boolean",
                "example": true
              },
              "copyPastAnswer": {
                "type": "boolean",
                "example": true
              },
              "fakeAnswer": {
                "type": "boolean",
                "example": true
              }
            }
          }
        }
      }
    },
    "responses": {
      "ValidationError": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "VALIDATION_ERROR"
                }
              }
            }
          }
        }
      },
      "UnauthorizedError": {
        "description": "Unauthorized Access",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                }
              }
            }
          }
        }
      },
      "DuplicateError": {
        "description": "Duplicate Respondent Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "DUPLICATE_RESPONDENT"
                }
              }
            }
          }
        }
      },
      "ServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Survey",
      "description": "Survey management"
    },
    {
      "name": "Respondent",
      "description": "Respondent management"
    }
  ],
  "paths": {
    "/respondent/add": {
      "post": {
        "tags": [
          "Respondent"
        ],
        "summary": "Add a new respondent",
        "description": "API for adding a new respondent with quality check data",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRespondentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jobId": {
                      "type": "string",
                      "example": "job-123-456"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "JOB_PROCESSING",
                        "JOB_COMPLETED"
                      ],
                      "example": "JOB_PROCESSING"
                    },
                    "results": {
                      "$ref": "#/components/schemas/RespondentResults"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "409": {
            "$ref": "#/components/responses/DuplicateError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/respondent/status/{surveyName}/{respondentId}": {
      "get": {
        "tags": [
          "Respondent"
        ],
        "summary": "Get respondent status",
        "description": "Get the quality check status and results for a specific respondent",
        "parameters": [
          {
            "name": "surveyName",
            "in": "path",
            "required": true,
            "description": "Name of the survey to check",
            "schema": {
              "type": "string",
              "example": "customer-survey-2024"
            }
          },
          {
            "name": "respondentId",
            "in": "path",
            "required": true,
            "description": "ID of the respondent to check",
            "schema": {
              "type": "string",
              "example": "RESP-001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RespondentResults"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/respondent/status/{surveyName}": {
      "get": {
        "tags": [
          "Respondent"
        ],
        "summary": "Get all respondents",
        "description": "Get quality check results for all respondents in a survey",
        "parameters": [
          {
            "name": "surveyName",
            "in": "path",
            "required": true,
            "description": "Name of the survey to check",
            "schema": {
              "type": "string",
              "example": "customer-survey-2024"
            }
          },
          {
            "name": "needDetailedResponse",
            "in": "query",
            "description": "Whether to include detailed scoring",
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RespondentResults"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/survey/add": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Create a new survey",
        "operationId": "addSurvey",
        "description": "API for creating a new survey with cleaning and review settings",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSurveyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Survey created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "SURVEY_CREATED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/survey/customize/{surveyName}": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Customize a survey's settings",
        "operationId": "customizeSurvey",
        "description": "API for customizing cleaning and review settings of an existing survey",
        "parameters": [
          {
            "name": "surveyName",
            "in": "path",
            "required": true,
            "description": "The name of the survey to customize",
            "schema": {
              "type": "string",
              "example": "my-survey-2024"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSurveyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Survey customized successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "SURVEY_UPDATED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/survey/stop/{surveyName}": {
      "get": {
        "tags": [
          "Survey"
        ],
        "summary": "Stop a survey and optionally run post-checks",
        "operationId": "stopSurvey",
        "description": "API for stopping a survey. Can be triggered from ReDem App or externally. Optionally runs post-checks on the survey data.",
        "parameters": [
          {
            "name": "surveyName",
            "in": "path",
            "required": true,
            "description": "Unique identifier name of the survey to stop",
            "schema": {
              "type": "string",
              "example": "my-survey-2024"
            }
          },
          {
            "name": "runPostChecks",
            "in": "query",
            "required": false,
            "description": "Whether to run post-checks after stopping the survey",
            "schema": {
              "type": "boolean",
              "default": false,
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Survey successfully stopped",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "SURVEY_STOPPED"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    }
  }
}